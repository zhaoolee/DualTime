{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/zhaoolee/github/DualTime/app/components/Clock.js"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport ColorThief from 'colorthief'\n\n// 图片路径前缀 - 生产环境添加前缀，开发环境不添加\nconst IMAGE_PREFIX = process.env.NODE_ENV === 'production' ? '/DualTime' : ''\n\n// 图片数组\nconst IMAGES = [\n  `${IMAGE_PREFIX}/desk-decor/大象.png`,\n  `${IMAGE_PREFIX}/desk-decor/葫芦.png`,\n  `${IMAGE_PREFIX}/desk-decor/貔貅.png`,\n  `${IMAGE_PREFIX}/desk-decor/金蟾.png`,\n  `${IMAGE_PREFIX}/desk-decor/龙龟.png`,\n  `${IMAGE_PREFIX}/desk-decor/大象001.png`,\n  `${IMAGE_PREFIX}/desk-decor/葫芦001.png`,\n  `${IMAGE_PREFIX}/desk-decor/貔貅001.png`,\n  `${IMAGE_PREFIX}/desk-decor/金蟾001.png`,\n  `${IMAGE_PREFIX}/desk-decor/龙龟001.png`,\n  `${IMAGE_PREFIX}/desk-decor/大象002.png`,\n  `${IMAGE_PREFIX}/desk-decor/葫芦002.png`,\n  `${IMAGE_PREFIX}/desk-decor/龙龟002.png`,\n  `${IMAGE_PREFIX}/desk-decor/龙龟003.png`,\n  `${IMAGE_PREFIX}/desk-decor/龙龟004.png`,\n  `${IMAGE_PREFIX}/desk-decor/五帝钱.png`,\n  `${IMAGE_PREFIX}/desk-decor/关公像.png`,\n  `${IMAGE_PREFIX}/desk-decor/文昌塔.png`,\n  `${IMAGE_PREFIX}/desk-decor/水晶洞.png`,\n  `${IMAGE_PREFIX}/desk-decor/关公像001.png`,\n  `${IMAGE_PREFIX}/desk-decor/文昌塔001.png`,\n  `${IMAGE_PREFIX}/desk-decor/五帝钱002.png`,\n  `${IMAGE_PREFIX}/desk-decor/关公像002.png`,\n  `${IMAGE_PREFIX}/desk-decor/文昌塔002.png`,\n  `${IMAGE_PREFIX}/desk-decor/水晶洞002.png`,\n  `${IMAGE_PREFIX}/desk-decor/文昌塔003.png`,\n  `${IMAGE_PREFIX}/desk-decor/文昌塔004.png`,\n  `${IMAGE_PREFIX}/desk-decor/福禄寿三星.png`,\n  `${IMAGE_PREFIX}/desk-decor/福禄寿三星001.png`,\n  `${IMAGE_PREFIX}/desk-decor/福禄寿三星002.png`,\n  `${IMAGE_PREFIX}/desk-decor/福禄寿三星003.png`\n]\n\nexport default function Clock() {\n  const [time, setTime] = useState(null) // 初始状态为 null，避免 hydration 错误\n  const [mounted, setMounted] = useState(false)\n  const [currentImage, setCurrentImage] = useState(IMAGES[0]) // 当前图片状态\n  const [imageColors, setImageColors] = useState({\n    isDark: false,\n    primaryColor: [55, 65, 81], // 默认灰色\n    backgroundColor: 'rgba(55, 65, 81, 0.15)', // 默认背景色\n    solidBackgroundColor: 'rgb(55, 65, 81)', // 默认纯色背景\n    textColor: '#374151',\n    textShadow: 'none'\n  })\n\n  // 响应式尺寸\n  const getResponsiveSize = () => {\n    if (typeof window !== 'undefined') {\n      const width = window.innerWidth\n      const height = window.innerHeight\n      \n      // 考虑到容器高度为屏幕高度的80%，表盘需要适应这个高度\n      // 预留空间给标题、文字和内边距\n      const availableHeight = height * 0.8 - 200 // 预留200px给文字、标题和边距\n      const maxSizeFromHeight = Math.min(availableHeight, height * 0.5) // 最大不超过屏幕高度的50%\n      \n      // 基于宽度的尺寸计算\n      let sizeFromWidth\n      if (width < 480) {\n        sizeFromWidth = 160\n      } else if (width < 640) {\n        sizeFromWidth = 200\n      } else if (width < 768) {\n        sizeFromWidth = 240\n      } else if (width < 1024) {\n        sizeFromWidth = 280\n      } else if (width < 1280) {\n        sizeFromWidth = 320\n      } else {\n        sizeFromWidth = 360\n      }\n      \n      // 取宽度和高度限制中的较小值\n      const finalSize = Math.min(sizeFromWidth, maxSizeFromHeight)\n      const center = finalSize / 2\n      const outerRadius = center - 10\n      const innerRadius = center - 20\n      const strokeWidth = finalSize < 200 ? 1.5 : finalSize < 300 ? 2 : 3\n      \n      return { \n        size: finalSize, \n        center: center, \n        outerRadius: outerRadius, \n        innerRadius: innerRadius, \n        strokeWidth: strokeWidth \n      }\n    }\n    return { size: 280, center: 140, outerRadius: 130, innerRadius: 120, strokeWidth: 2 }\n  }\n\n  const [dimensions, setDimensions] = useState(getResponsiveSize())\n\n  // 分析图片颜色 - 支持动态图片路径\n  const analyzeImageColors = (imagePath) => {\n    if (typeof window !== 'undefined') {\n      const img = new Image()\n      img.crossOrigin = 'anonymous'\n      img.onload = () => {\n        try {\n          const colorThief = new ColorThief()\n          const dominantColor = colorThief.getColor(img)\n          const palette = colorThief.getPalette(img, 5)\n          \n          // 计算亮度 (使用相对亮度公式)\n          const getLuminance = (r, g, b) => {\n            const [rs, gs, bs] = [r, g, b].map(c => {\n              c = c / 255\n              return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4)\n            })\n            return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs\n          }\n          \n          const luminance = getLuminance(dominantColor[0], dominantColor[1], dominantColor[2])\n          const isDark = luminance < 0.5\n          \n          // 根据背景亮度选择合适的文字颜色\n          let textColor, textShadow\n          if (isDark) {\n            // 深色背景，使用浅色文字\n            textColor = '#ffffff'\n            textShadow = '2px 2px 4px rgba(0,0,0,0.8), -1px -1px 2px rgba(0,0,0,0.5)'\n          } else {\n            // 浅色背景，使用深色文字\n            textColor = '#000000'\n            textShadow = '2px 2px 4px rgba(255,255,255,0.8), -1px -1px 2px rgba(255,255,255,0.5)'\n          }\n          \n          // 生成和谐的背景色 - 基于主色调创建柔和的表盘背景\n          const getHarmonicBackgroundColor = (r, g, b) => {\n            // 创建更加明显但仍然和谐的背景色\n            // 对于浅色图片，稍微加深颜色\n            // 对于深色图片，稍微提亮颜色\n            let adjustedR, adjustedG, adjustedB\n            \n            if (isDark) {\n              // 深色图片：提亮一些，但保持色相\n              adjustedR = Math.min(255, Math.round(r * 1.8 + 50))\n              adjustedG = Math.min(255, Math.round(g * 1.8 + 50))\n              adjustedB = Math.min(255, Math.round(b * 1.8 + 50))\n            } else {\n              // 浅色图片：稍微加深和增加饱和度\n              adjustedR = Math.max(0, Math.round(r * 0.8))\n              adjustedG = Math.max(0, Math.round(g * 0.8))\n              adjustedB = Math.max(0, Math.round(b * 0.8))\n            }\n            \n            return `rgb(${adjustedR}, ${adjustedG}, ${adjustedB})`\n          }\n          \n          const backgroundColor = `rgba(${dominantColor[0]}, ${dominantColor[1]}, ${dominantColor[2]}, 0.2)`\n          const solidBackgroundColor = getHarmonicBackgroundColor(dominantColor[0], dominantColor[1], dominantColor[2])\n          \n          setImageColors({\n            isDark,\n            primaryColor: dominantColor,\n            backgroundColor,\n            solidBackgroundColor,\n            textColor,\n            textShadow\n          })\n        } catch (error) {\n          console.warn('Error analyzing image colors:', error)\n        }\n      }\n      img.src = imagePath\n    }\n  }\n\n  // 随机切换图片\n  const handleClockClick = () => {\n    const randomIndex = Math.floor(Math.random() * IMAGES.length)\n    const newImage = IMAGES[randomIndex]\n    setCurrentImage(newImage)\n  }\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getResponsiveSize())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  useEffect(() => {\n    setMounted(true)\n    setTime(new Date())\n    analyzeImageColors(currentImage)\n    \n    const timer = setInterval(() => {\n      setTime(new Date())\n    }, 1000)\n\n    return () => clearInterval(timer)\n  }, [])\n\n  // 当图片变化时重新分析颜色\n  useEffect(() => {\n    if (mounted && currentImage) {\n      analyzeImageColors(currentImage)\n    }\n  }, [currentImage, mounted])\n\n  const { size, center, outerRadius, innerRadius, strokeWidth } = dimensions\n\n  // 如果还没有 mounted 或者时间还没设置，显示默认状态\n  if (!mounted || !time) {\n    return (\n      <div className=\"flex flex-col items-center space-y-3 sm:space-y-4\">\n        {/* 静态时钟表盘 */}\n        <div className=\"relative\">\n          <svg width={size} height={size} className=\"drop-shadow-lg clock-dial cursor-pointer\" onClick={handleClockClick}>\n            <defs>\n              <pattern id=\"backgroundPattern\" patternUnits=\"userSpaceOnUse\" width={size} height={size} x=\"0\" y=\"0\">\n                <rect width={size} height={size} fill=\"white\" />\n                <image \n                  href={currentImage}\n                  x={size * 0.15} \n                  y={size * 0.15} \n                  width={size * 0.7} \n                  height={size * 0.7} \n                  preserveAspectRatio=\"xMidYMid slice\"\n                  onError={(e) => { e.target.style.display = 'none' }}\n                />\n              </pattern>\n              <clipPath id=\"clockClip\">\n                <circle cx={center} cy={center} r={outerRadius} />\n              </clipPath>\n            </defs>\n            \n            {/* 底色背景圆 */}\n            <circle\n              cx={center}\n              cy={center}\n              r={outerRadius}\n              fill={imageColors.solidBackgroundColor}\n              stroke=\"#e5e7eb\"\n              strokeWidth={strokeWidth}\n              opacity=\"0.8\"\n            />\n            \n            {/* 外圆背景 */}\n            <circle\n              cx={center}\n              cy={center}\n              r={outerRadius}\n              fill=\"url(#backgroundPattern)\"\n              stroke=\"#e5e7eb\"\n              strokeWidth={strokeWidth}\n              clipPath=\"url(#clockClip)\"\n              opacity=\"0.7\"\n            />\n            \n            {/* 内圆装饰 */}\n            <circle\n              cx={center}\n              cy={center}\n              r={innerRadius}\n              fill=\"none\"\n              stroke=\"#f3f4f6\"\n              strokeWidth=\"1\"\n              strokeDasharray=\"2,4\"\n            />\n            \n            {/* 静态小时刻度 */}\n            {[...Array(12)].map((_, i) => {\n              const angle = i * 30 // 每30度一个刻度\n              const x1 = center + outerRadius * Math.cos((angle - 90) * Math.PI / 180)\n              const y1 = center + outerRadius * Math.sin((angle - 90) * Math.PI / 180)\n              const x2 = center + (outerRadius - 10) * Math.cos((angle - 90) * Math.PI / 180)\n              const y2 = center + (outerRadius - 10) * Math.sin((angle - 90) * Math.PI / 180)\n              \n              return (\n                <g key={i}>\n                  {/* 背景线 */}\n                  <line\n                    x1={x1}\n                    y1={y1}\n                    x2={x2}\n                    y2={y2}\n                    stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                    strokeWidth={strokeWidth + 3}\n                  />\n                  {/* 主线 */}\n                  <line\n                    x1={x1}\n                    y1={y1}\n                    x2={x2}\n                    y2={y2}\n                    stroke={imageColors.textColor}\n                    strokeWidth={strokeWidth + 1}\n                  />\n                </g>\n              )\n            })}\n            \n            {/* 静态数字 */}\n            {[12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((num, i) => {\n              const angle = i * 30 // 每30度一个数字\n              const x = center + (outerRadius - 25) * Math.cos((angle - 90) * Math.PI / 180)\n              const y = center + (outerRadius - 25) * Math.sin((angle - 90) * Math.PI / 180)\n              \n              return (\n                <g key={num}>\n                  {/* 背景文字 - 创建对比 */}\n                  <text\n                    x={x}\n                    y={y}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    className=\"text-xs sm:text-sm lg:text-lg font-bold select-none\"\n                    fill={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                    stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                    strokeWidth=\"3\"\n                  >\n                    {num}\n                  </text>\n                  {/* 主文字 */}\n                  <text\n                    x={x}\n                    y={y}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    className=\"text-xs sm:text-sm lg:text-lg font-bold select-none\"\n                    fill={imageColors.textColor}\n                  >\n                    {num}\n                  </text>\n                </g>\n              )\n            })}\n            \n            {/* 默认指针位置 (12:00:00) */}\n            {/* 小时指针 */}\n            <g>\n              <line\n                x1={center}\n                y1={center}\n                x2={center}\n                y2={center - (outerRadius * 0.5)}\n                stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                strokeWidth={Math.max(6, strokeWidth + 4)}\n                strokeLinecap=\"round\"\n              />\n              <line\n                x1={center}\n                y1={center}\n                x2={center}\n                y2={center - (outerRadius * 0.5)}\n                stroke={imageColors.textColor}\n                strokeWidth={Math.max(4, strokeWidth + 2)}\n                strokeLinecap=\"round\"\n              />\n            </g>\n            \n            {/* 分钟指针 */}\n            <g>\n              <line\n                x1={center}\n                y1={center}\n                x2={center}\n                y2={center - (outerRadius * 0.7)}\n                stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                strokeWidth={Math.max(4, strokeWidth + 2)}\n                strokeLinecap=\"round\"\n              />\n              <line\n                x1={center}\n                y1={center}\n                x2={center}\n                y2={center - (outerRadius * 0.7)}\n                stroke={imageColors.textColor}\n                strokeWidth={Math.max(2, strokeWidth)}\n                strokeLinecap=\"round\"\n              />\n            </g>\n            \n            {/* 秒针 */}\n            <line\n              x1={center}\n              y1={center}\n              x2={center}\n              y2={center - (outerRadius * 0.8)}\n              stroke={imageColors.isDark ? \"#10b981\" : \"#059669\"}\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n            />\n            \n            {/* 中心圆点 */}\n            <circle\n              cx={center}\n              cy={center}\n              r={size < 200 ? \"6\" : size < 280 ? \"7\" : size < 320 ? \"8\" : \"10\"}\n              fill={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n            />\n            <circle\n              cx={center}\n              cy={center}\n              r={size < 200 ? \"4\" : size < 280 ? \"5\" : size < 320 ? \"6\" : \"8\"}\n              fill={imageColors.textColor}\n            />\n            <circle\n              cx={center}\n              cy={center}\n              r={size < 200 ? \"2\" : size < 280 ? \"3\" : \"4\"}\n              fill={imageColors.isDark ? \"#10b981\" : \"#059669\"}\n            />\n          </svg>\n        </div>\n        \n        {/* 默认时间显示 */}\n        <div className=\"text-center\">\n          <div className=\"text-lg sm:text-2xl lg:text-3xl xl:text-4xl font-bold mb-1 sm:mb-2 select-none flex items-baseline justify-center space-x-1 sm:space-x-2 text-gray-800\">\n            <span>12:00</span>\n            <span className=\"text-sm sm:text-base lg:text-lg font-semibold opacity-90 text-red-600\">\n              AM\n            </span>\n          </div>\n          \n          <div className=\"text-[10px] sm:text-xs lg:text-sm select-none opacity-70 text-gray-600\">\n            加载中...\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // 计算指针角度\n  const getHourAngle = () => {\n    const hours = time.getHours() % 12\n    const minutes = time.getMinutes()\n    return (hours * 30) + (minutes * 0.5) // 每小时30度，每分钟0.5度\n  }\n\n  const getMinuteAngle = () => {\n    const minutes = time.getMinutes()\n    const seconds = time.getSeconds()\n    return (minutes * 6) + (seconds * 0.1) // 每分钟6度，每秒0.1度\n  }\n\n  const getSecondAngle = () => {\n    return time.getSeconds() * 6 // 每秒6度\n  }\n\n  // 格式化数字显示\n  const formatTime = () => {\n    let hours = time.getHours()\n    const minutes = time.getMinutes()\n    const ampm = hours >= 12 ? 'PM' : 'AM'\n    hours = hours % 12\n    hours = hours ? hours : 12 // 0点显示为12点\n    \n    return {\n      time: `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`,\n      ampm: ampm\n    }\n  }\n\n  const formattedTime = formatTime()\n\n  return (\n    <div className=\"flex flex-col items-center space-y-3 sm:space-y-4\">\n      {/* 时钟表盘 */}\n      <div className=\"relative\">\n        <svg width={size} height={size} className=\"drop-shadow-lg clock-dial cursor-pointer\" onClick={handleClockClick}>\n          <defs>\n            <pattern id=\"backgroundPatternLive\" patternUnits=\"userSpaceOnUse\" width={size} height={size} x=\"0\" y=\"0\">\n              <rect width={size} height={size} fill=\"white\" />\n              <image \n                href={currentImage}\n                x={size * 0.15} \n                y={size * 0.15} \n                width={size * 0.7} \n                height={size * 0.7} \n                preserveAspectRatio=\"xMidYMid meet\"\n                onError={(e) => { e.target.style.display = 'none' }}\n              />\n            </pattern>\n            <clipPath id=\"clockClipLive\">\n              <circle cx={center} cy={center} r={outerRadius} />\n            </clipPath>\n          </defs>\n          \n          {/* 底色背景圆 */}\n          <circle\n            cx={center}\n            cy={center}\n            r={outerRadius}\n            fill={imageColors.solidBackgroundColor}\n            stroke=\"#e5e7eb\"\n            strokeWidth={strokeWidth}\n            opacity=\"0.8\"\n          />\n          \n          {/* 外圆背景 */}\n          <circle\n            cx={center}\n            cy={center}\n            r={outerRadius}\n            fill=\"url(#backgroundPatternLive)\"\n            stroke=\"#e5e7eb\"\n            strokeWidth={strokeWidth}\n            clipPath=\"url(#clockClipLive)\"\n            opacity=\"0.7\"\n          />\n          \n          {/* 内圆装饰 */}\n          <circle\n            cx={center}\n            cy={center}\n            r={innerRadius}\n            fill=\"none\"\n            stroke=\"#f3f4f6\"\n            strokeWidth=\"1\"\n            strokeDasharray=\"2,4\"\n          />\n          \n          {/* 小时刻度 */}\n          {[...Array(12)].map((_, i) => {\n            const angle = i * 30 // 每30度一个刻度\n            const x1 = center + outerRadius * Math.cos((angle - 90) * Math.PI / 180)\n            const y1 = center + outerRadius * Math.sin((angle - 90) * Math.PI / 180)\n            const x2 = center + (outerRadius - 10) * Math.cos((angle - 90) * Math.PI / 180)\n            const y2 = center + (outerRadius - 10) * Math.sin((angle - 90) * Math.PI / 180)\n            \n            return (\n              <g key={i}>\n                {/* 背景线 */}\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                  strokeWidth={strokeWidth + 3}\n                />\n                {/* 主线 */}\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={imageColors.textColor}\n                  strokeWidth={strokeWidth + 1}\n                />\n              </g>\n            )\n          })}\n          \n          {/* 分钟小刻度 */}\n          {[...Array(60)].map((_, i) => {\n            if (i % 5 !== 0) { // 不是主刻度的位置\n              const angle = i * 6 // 每6度一个小刻度\n              const x1 = center + outerRadius * Math.cos((angle - 90) * Math.PI / 180)\n              const y1 = center + outerRadius * Math.sin((angle - 90) * Math.PI / 180)\n              const x2 = center + (outerRadius - 5) * Math.cos((angle - 90) * Math.PI / 180)\n              const y2 = center + (outerRadius - 5) * Math.sin((angle - 90) * Math.PI / 180)\n              \n              return (\n                <line\n                  key={`small-${i}`}\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke=\"#d1d5db\"\n                  strokeWidth=\"1\"\n                />\n              )\n            }\n            return null\n          })}\n          \n          {/* 数字 */}\n          {[12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((num, i) => {\n            const angle = i * 30 // 每30度一个数字\n            const x = center + (outerRadius - 25) * Math.cos((angle - 90) * Math.PI / 180)\n            const y = center + (outerRadius - 25) * Math.sin((angle - 90) * Math.PI / 180)\n            \n            return (\n              <g key={num}>\n                {/* 背景文字 - 创建对比 */}\n                <text\n                  x={x}\n                  y={y}\n                  textAnchor=\"middle\"\n                  dominantBaseline=\"central\"\n                  className=\"text-xs sm:text-sm lg:text-lg font-bold select-none\"\n                  fill={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                  stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n                  strokeWidth=\"3\"\n                >\n                  {num}\n                </text>\n                {/* 主文字 */}\n                <text\n                  x={x}\n                  y={y}\n                  textAnchor=\"middle\"\n                  dominantBaseline=\"central\"\n                  className=\"text-xs sm:text-sm lg:text-lg font-bold select-none\"\n                  fill={imageColors.textColor}\n                >\n                  {num}\n                </text>\n              </g>\n            )\n          })}\n          \n          {/* 小时指针 */}\n          <g>\n            <line\n              x1={center}\n              y1={center}\n              x2={center + (outerRadius * 0.5) * Math.sin(getHourAngle() * Math.PI / 180)}\n              y2={center - (outerRadius * 0.5) * Math.cos(getHourAngle() * Math.PI / 180)}\n              stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n              strokeWidth={Math.max(6, strokeWidth + 4)}\n              strokeLinecap=\"round\"\n            />\n            <line\n              x1={center}\n              y1={center}\n              x2={center + (outerRadius * 0.5) * Math.sin(getHourAngle() * Math.PI / 180)}\n              y2={center - (outerRadius * 0.5) * Math.cos(getHourAngle() * Math.PI / 180)}\n              stroke={imageColors.textColor}\n              strokeWidth={Math.max(4, strokeWidth + 2)}\n              strokeLinecap=\"round\"\n            />\n          </g>\n          \n          {/* 分钟指针 */}\n          <g>\n            <line\n              x1={center}\n              y1={center}\n              x2={center + (outerRadius * 0.7) * Math.sin(getMinuteAngle() * Math.PI / 180)}\n              y2={center - (outerRadius * 0.7) * Math.cos(getMinuteAngle() * Math.PI / 180)}\n              stroke={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n              strokeWidth={Math.max(4, strokeWidth + 2)}\n              strokeLinecap=\"round\"\n            />\n            <line\n              x1={center}\n              y1={center}\n              x2={center + (outerRadius * 0.7) * Math.sin(getMinuteAngle() * Math.PI / 180)}\n              y2={center - (outerRadius * 0.7) * Math.cos(getMinuteAngle() * Math.PI / 180)}\n              stroke={imageColors.textColor}\n              strokeWidth={Math.max(2, strokeWidth)}\n              strokeLinecap=\"round\"\n            />\n          </g>\n          \n          {/* 秒针 */}\n          <line\n            x1={center}\n            y1={center}\n            x2={center + (outerRadius * 0.8) * Math.sin(getSecondAngle() * Math.PI / 180)}\n            y2={center - (outerRadius * 0.8) * Math.cos(getSecondAngle() * Math.PI / 180)}\n            stroke={imageColors.isDark ? \"#10b981\" : \"#059669\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 中心圆点 */}\n          <circle\n            cx={center}\n            cy={center}\n            r={size < 200 ? \"6\" : size < 280 ? \"7\" : size < 320 ? \"8\" : \"10\"}\n            fill={imageColors.isDark ? \"#000000\" : \"#ffffff\"}\n          />\n          <circle\n            cx={center}\n            cy={center}\n            r={size < 200 ? \"4\" : size < 280 ? \"5\" : size < 320 ? \"6\" : \"8\"}\n            fill={imageColors.textColor}\n          />\n          <circle\n            cx={center}\n            cy={center}\n            r={size < 200 ? \"2\" : size < 280 ? \"3\" : \"4\"}\n            fill={imageColors.isDark ? \"#10b981\" : \"#059669\"}\n          />\n        </svg>\n      </div>\n      \n        {/* 时间显示 */}\n        <div className=\"text-center\">\n          <div className=\"text-lg sm:text-2xl lg:text-3xl xl:text-4xl font-bold mb-1 sm:mb-2 select-none flex items-baseline justify-center space-x-1 sm:space-x-2 text-gray-800\">\n            <span>{formattedTime.time}</span>\n            <span className=\"text-sm sm:text-base lg:text-lg font-semibold opacity-90 text-red-600\">\n              {formattedTime.ampm}\n            </span>\n          </div>\n          \n          <div className=\"text-[10px] sm:text-xs lg:text-sm text-gray-500 select-none px-1\">\n            {time.toLocaleDateString('zh-CN', {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n              weekday: 'long'\n            })} • 点击表盘切换图片\n          </div>\n        </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":["file:///home/zhaoolee/github/DualTime/node_modules/.pnpm/colorthief%402.6.0/node_modules/colorthief/dist/color-thief.mjs"],"sourcesContent":["var t=function(t,r){return t<r?-1:t>r?1:0},r=function(t){return t.reduce(function(t,r){return t+r},0)},n=/*#__PURE__*/function(){function t(t){this.colors=t}var r=t.prototype;return r.palette=function(){return this.colors},r.map=function(t){return t},t}(),o=function(){function o(t,r,n){return(t<<10)+(r<<5)+n}function e(t){var r=[],n=!1;function o(){r.sort(t),n=!0}return{push:function(t){r.push(t),n=!1},peek:function(t){return n||o(),void 0===t&&(t=r.length-1),r[t]},pop:function(){return n||o(),r.pop()},size:function(){return r.length},map:function(t){return r.map(t)},debug:function(){return n||o(),r}}}function i(t,r,n,o,e,i,u){var a=this;a.r1=t,a.r2=r,a.g1=n,a.g2=o,a.b1=e,a.b2=i,a.histo=u}function u(){this.vboxes=new e(function(r,n){return t(r.vbox.count()*r.vbox.volume(),n.vbox.count()*n.vbox.volume())})}function a(t,r){if(r.count()){var n=r.r2-r.r1+1,e=r.g2-r.g1+1,i=Math.max.apply(null,[n,e,r.b2-r.b1+1]);if(1==r.count())return[r.copy()];var u,a,c,f,s=0,h=[],v=[];if(i==n)for(u=r.r1;u<=r.r2;u++){for(f=0,a=r.g1;a<=r.g2;a++)for(c=r.b1;c<=r.b2;c++)f+=t[o(u,a,c)]||0;h[u]=s+=f}else if(i==e)for(u=r.g1;u<=r.g2;u++){for(f=0,a=r.r1;a<=r.r2;a++)for(c=r.b1;c<=r.b2;c++)f+=t[o(a,u,c)]||0;h[u]=s+=f}else for(u=r.b1;u<=r.b2;u++){for(f=0,a=r.r1;a<=r.r2;a++)for(c=r.g1;c<=r.g2;c++)f+=t[o(a,c,u)]||0;h[u]=s+=f}return h.forEach(function(t,r){v[r]=s-t}),function(t){var n,o,e,i,a,c=t+\"1\",f=t+\"2\",l=0;for(u=r[c];u<=r[f];u++)if(h[u]>s/2){for(e=r.copy(),i=r.copy(),a=(n=u-r[c])<=(o=r[f]-u)?Math.min(r[f]-1,~~(u+o/2)):Math.max(r[c],~~(u-1-n/2));!h[a];)a++;for(l=v[a];!l&&h[a-1];)l=v[--a];return e[f]=a,i[c]=e[f]+1,[e,i]}}(i==n?\"r\":i==e?\"g\":\"b\")}}return i.prototype={volume:function(t){var r=this;return r._volume&&!t||(r._volume=(r.r2-r.r1+1)*(r.g2-r.g1+1)*(r.b2-r.b1+1)),r._volume},count:function(t){var r=this,n=r.histo;if(!r._count_set||t){var e,i,u,a=0;for(e=r.r1;e<=r.r2;e++)for(i=r.g1;i<=r.g2;i++)for(u=r.b1;u<=r.b2;u++)a+=n[o(e,i,u)]||0;r._count=a,r._count_set=!0}return r._count},copy:function(){var t=this;return new i(t.r1,t.r2,t.g1,t.g2,t.b1,t.b2,t.histo)},avg:function(t){var r=this,n=r.histo;if(!r._avg||t){var e,i,u,a,c=0,f=0,s=0,h=0;if(r.r1===r.r2&&r.g1===r.g2&&r.b1===r.b2)r._avg=[r.r1<<3,r.g1<<3,r.b1<<3];else{for(i=r.r1;i<=r.r2;i++)for(u=r.g1;u<=r.g2;u++)for(a=r.b1;a<=r.b2;a++)c+=e=n[o(i,u,a)]||0,f+=e*(i+.5)*8,s+=e*(u+.5)*8,h+=e*(a+.5)*8;r._avg=c?[~~(f/c),~~(s/c),~~(h/c)]:[~~(8*(r.r1+r.r2+1)/2),~~(8*(r.g1+r.g2+1)/2),~~(8*(r.b1+r.b2+1)/2)]}}return r._avg},contains:function(t){var r=this,n=t[0]>>3;return gval=t[1]>>3,bval=t[2]>>3,n>=r.r1&&n<=r.r2&&gval>=r.g1&&gval<=r.g2&&bval>=r.b1&&bval<=r.b2}},u.prototype={push:function(t){this.vboxes.push({vbox:t,color:t.avg()})},palette:function(){return this.vboxes.map(function(t){return t.color})},size:function(){return this.vboxes.size()},map:function(t){for(var r=this.vboxes,n=0;n<r.size();n++)if(r.peek(n).vbox.contains(t))return r.peek(n).color;return this.nearest(t)},nearest:function(t){for(var r,n,o,e=this.vboxes,i=0;i<e.size();i++)((n=Math.sqrt(Math.pow(t[0]-e.peek(i).color[0],2)+Math.pow(t[1]-e.peek(i).color[1],2)+Math.pow(t[2]-e.peek(i).color[2],2)))<r||void 0===r)&&(r=n,o=e.peek(i).color);return o},forcebw:function(){var n=this.vboxes;n.sort(function(n,o){return t(r(n.color),r(o.color))});var o=n[0].color;o[0]<5&&o[1]<5&&o[2]<5&&(n[0].color=[0,0,0]);var e=n.length-1,i=n[e].color;i[0]>251&&i[1]>251&&i[2]>251&&(n[e].color=[255,255,255])}},{quantize:function(r,c){if(!Number.isInteger(c)||c<1||c>256)throw new Error(\"Invalid maximum color count. It must be an integer between 1 and 256.\");if(!r.length||c<2||c>256)return!1;if(!r.length||c<2||c>256)return!1;for(var f=[],s=new Set,h=0;h<r.length;h++){var v=r[h],l=v.join(\",\");s.has(l)||(s.add(l),f.push(v))}if(f.length<=c)return new n(f);var g=function(t){var r,n=new Array(32768);return t.forEach(function(t){r=o(t[0]>>3,t[1]>>3,t[2]>>3),n[r]=(n[r]||0)+1}),n}(r);g.forEach(function(){});var p=function(t,r){var n,o,e,u=1e6,a=0,c=1e6,f=0,s=1e6,h=0;return t.forEach(function(t){(n=t[0]>>3)<u?u=n:n>a&&(a=n),(o=t[1]>>3)<c?c=o:o>f&&(f=o),(e=t[2]>>3)<s?s=e:e>h&&(h=e)}),new i(u,a,c,f,s,h,r)}(r,g),b=new e(function(r,n){return t(r.count(),n.count())});function m(t,r){for(var n,o=t.size(),e=0;e<1e3;){if(o>=r)return;if(e++>1e3)return;if((n=t.pop()).count()){var i=a(g,n),u=i[0],c=i[1];if(!u)return;t.push(u),c&&(t.push(c),o++)}else t.push(n),e++}}b.push(p),m(b,.75*c);for(var d=new e(function(r,n){return t(r.count()*r.volume(),n.count()*n.volume())});b.size();)d.push(b.pop());m(d,c);for(var w=new u;d.size();)w.push(d.pop());return w}}}().quantize,e=function(t){this.canvas=document.createElement(\"canvas\"),this.context=this.canvas.getContext(\"2d\"),this.width=this.canvas.width=t.naturalWidth,this.height=this.canvas.height=t.naturalHeight,this.context.drawImage(t,0,0,this.width,this.height)};e.prototype.getImageData=function(){return this.context.getImageData(0,0,this.width,this.height)};var u=function(){};u.prototype.getColor=function(t,r){return void 0===r&&(r=10),this.getPalette(t,5,r)[0]},u.prototype.getPalette=function(t,r,n){var i=function(t){var r=t.colorCount,n=t.quality;if(void 0!==r&&Number.isInteger(r)){if(1===r)throw new Error(\"colorCount should be between 2 and 20. To get one color, call getColor() instead of getPalette()\");r=Math.max(r,2),r=Math.min(r,20)}else r=10;return(void 0===n||!Number.isInteger(n)||n<1)&&(n=10),{colorCount:r,quality:n}}({colorCount:r,quality:n}),u=new e(t),a=function(t,r,n){for(var o,e,i,u,a,c=t,f=[],s=0;s<r;s+=n)e=c[0+(o=4*s)],i=c[o+1],u=c[o+2],(void 0===(a=c[o+3])||a>=125)&&(e>250&&i>250&&u>250||f.push([e,i,u]));return f}(u.getImageData().data,u.width*u.height,i.quality),c=o(a,i.colorCount);return c?c.palette():null},u.prototype.getColorFromUrl=function(t,r,n){var o=this,e=document.createElement(\"img\");e.addEventListener(\"load\",function(){var i=o.getPalette(e,5,n);r(i[0],t)}),e.src=t},u.prototype.getImageData=function(t,r){var n=new XMLHttpRequest;n.open(\"GET\",t,!0),n.responseType=\"arraybuffer\",n.onload=function(){if(200==this.status){var t=new Uint8Array(this.response);i=t.length;for(var n=new Array(i),o=0;o<t.length;o++)n[o]=String.fromCharCode(t[o]);var e=n.join(\"\"),u=window.btoa(e);r(\"data:image/png;base64,\"+u)}},n.send()},u.prototype.getColorAsync=function(t,r,n){var o=this;this.getImageData(t,function(t){var e=document.createElement(\"img\");e.addEventListener(\"load\",function(){var t=o.getPalette(e,5,n);r(t[0],this)}),e.src=t})};export{u as default};\n"],"names":[],"mappings":";;;AAAA,IAAI,IAAE,SAAS,CAAC,EAAC,CAAC;IAAE,OAAO,IAAE,IAAE,CAAC,IAAE,IAAE,IAAE,IAAE;AAAC,GAAE,IAAE,SAAS,CAAC;IAAE,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,EAAC,CAAC;QAAE,OAAO,IAAE;IAAC,GAAE;AAAE,GAAE,IAAE,WAAW,GAAE;IAAW,SAAS,EAAE,CAAC;QAAE,IAAI,CAAC,MAAM,GAAC;IAAC;IAAC,IAAI,IAAE,EAAE,SAAS;IAAC,OAAO,EAAE,OAAO,GAAC;QAAW,OAAO,IAAI,CAAC,MAAM;IAAA,GAAE,EAAE,GAAG,GAAC,SAAS,CAAC;QAAE,OAAO;IAAC,GAAE;AAAC,KAAI,IAAE;IAAW,SAAS,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC;QAAE,OAAM,CAAC,KAAG,EAAE,IAAE,CAAC,KAAG,CAAC,IAAE;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,IAAI,IAAE,EAAE,EAAC,IAAE,CAAC;QAAE,SAAS;YAAI,EAAE,IAAI,CAAC,IAAG,IAAE,CAAC;QAAC;QAAC,OAAM;YAAC,MAAK,SAAS,CAAC;gBAAE,EAAE,IAAI,CAAC,IAAG,IAAE,CAAC;YAAC;YAAE,MAAK,SAAS,CAAC;gBAAE,OAAO,KAAG,KAAI,KAAK,MAAI,KAAG,CAAC,IAAE,EAAE,MAAM,GAAC,CAAC,GAAE,CAAC,CAAC,EAAE;YAAA;YAAE,KAAI;gBAAW,OAAO,KAAG,KAAI,EAAE,GAAG;YAAE;YAAE,MAAK;gBAAW,OAAO,EAAE,MAAM;YAAA;YAAE,KAAI,SAAS,CAAC;gBAAE,OAAO,EAAE,GAAG,CAAC;YAAE;YAAE,OAAM;gBAAW,OAAO,KAAG,KAAI;YAAC;QAAC;IAAC;IAAC,SAAS,GAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAC,EAAC,CAAC;QAAE,IAAI,IAAE,IAAI;QAAC,EAAE,EAAE,GAAC,GAAE,EAAE,EAAE,GAAC,GAAE,EAAE,EAAE,GAAC,GAAE,EAAE,EAAE,GAAC,GAAE,EAAE,EAAE,GAAC,GAAE,EAAE,EAAE,GAAC,IAAE,EAAE,KAAK,GAAC;IAAC;IAAC,SAAS;QAAI,IAAI,CAAC,MAAM,GAAC,IAAI,EAAE,SAAS,CAAC,EAAC,CAAC;YAAE,OAAO,EAAE,EAAE,IAAI,CAAC,KAAK,KAAG,EAAE,IAAI,CAAC,MAAM,IAAG,EAAE,IAAI,CAAC,KAAK,KAAG,EAAE,IAAI,CAAC,MAAM;QAAG;IAAE;IAAC,SAAS,EAAE,CAAC,EAAC,CAAC;QAAE,IAAG,EAAE,KAAK,IAAG;YAAC,IAAI,IAAE,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,GAAE,IAAE,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,GAAE,KAAE,KAAK,GAAG,CAAC,KAAK,CAAC,MAAK;gBAAC;gBAAE;gBAAE,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC;aAAE;YAAE,IAAG,KAAG,EAAE,KAAK,IAAG,OAAM;gBAAC,EAAE,IAAI;aAAG;YAAC,IAAI,GAAE,GAAE,GAAE,GAAE,IAAE,GAAE,IAAE,EAAE,EAAC,IAAE,EAAE;YAAC,IAAG,MAAG,GAAE,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI;gBAAC,IAAI,IAAE,GAAE,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,KAAG,CAAC,CAAC,EAAE,GAAE,GAAE,GAAG,IAAE;gBAAE,CAAC,CAAC,EAAE,GAAC,KAAG;YAAC;iBAAM,IAAG,MAAG,GAAE,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI;gBAAC,IAAI,IAAE,GAAE,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,KAAG,CAAC,CAAC,EAAE,GAAE,GAAE,GAAG,IAAE;gBAAE,CAAC,CAAC,EAAE,GAAC,KAAG;YAAC;iBAAM,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI;gBAAC,IAAI,IAAE,GAAE,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,KAAG,CAAC,CAAC,EAAE,GAAE,GAAE,GAAG,IAAE;gBAAE,CAAC,CAAC,EAAE,GAAC,KAAG;YAAC;YAAC,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,EAAC,CAAC;gBAAE,CAAC,CAAC,EAAE,GAAC,IAAE;YAAC,IAAG,SAAS,CAAC;gBAAE,IAAI,GAAE,GAAE,GAAE,IAAE,GAAE,IAAE,IAAE,KAAI,IAAE,IAAE,KAAI,IAAE;gBAAE,IAAI,IAAE,CAAC,CAAC,EAAE,EAAC,KAAG,CAAC,CAAC,EAAE,EAAC,IAAI,IAAG,CAAC,CAAC,EAAE,GAAC,IAAE,GAAE;oBAAC,IAAI,IAAE,EAAE,IAAI,IAAG,KAAE,EAAE,IAAI,IAAG,IAAE,CAAC,IAAE,IAAE,CAAC,CAAC,EAAE,KAAG,CAAC,IAAE,CAAC,CAAC,EAAE,GAAC,CAAC,IAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAC,GAAE,CAAC,CAAC,CAAC,IAAE,IAAE,CAAC,KAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,IAAE,IAAE,IAAE,CAAC,IAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBAAI,IAAI,IAAE,CAAC,CAAC,EAAE,EAAC,CAAC,KAAG,CAAC,CAAC,IAAE,EAAE,EAAE,IAAE,CAAC,CAAC,EAAE,EAAE;oBAAC,OAAO,CAAC,CAAC,EAAE,GAAC,GAAE,EAAC,CAAC,EAAE,GAAC,CAAC,CAAC,EAAE,GAAC,GAAE;wBAAC;wBAAE;qBAAE;gBAAA;YAAC,EAAE,MAAG,IAAE,MAAI,MAAG,IAAE,MAAI;QAAI;IAAC;IAAC,OAAO,GAAE,SAAS,GAAC;QAAC,QAAO,SAAS,CAAC;YAAE,IAAI,IAAE,IAAI;YAAC,OAAO,EAAE,OAAO,IAAE,CAAC,KAAG,CAAC,EAAE,OAAO,GAAC,CAAC,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,CAAC,IAAE,CAAC,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,CAAC,IAAE,CAAC,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,CAAC,CAAC,GAAE,EAAE,OAAO;QAAA;QAAE,OAAM,SAAS,CAAC;YAAE,IAAI,IAAE,IAAI,EAAC,IAAE,EAAE,KAAK;YAAC,IAAG,CAAC,EAAE,UAAU,IAAE,GAAE;gBAAC,IAAI,GAAE,IAAE,GAAE,IAAE;gBAAE,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,IAAI,KAAE,EAAE,EAAE,EAAC,MAAG,EAAE,EAAE,EAAC,KAAI,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,KAAG,CAAC,CAAC,EAAE,GAAE,IAAE,GAAG,IAAE;gBAAE,EAAE,MAAM,GAAC,GAAE,EAAE,UAAU,GAAC,CAAC;YAAC;YAAC,OAAO,EAAE,MAAM;QAAA;QAAE,MAAK;YAAW,IAAI,IAAE,IAAI;YAAC,OAAO,IAAI,GAAE,EAAE,EAAE,EAAC,EAAE,EAAE,EAAC,EAAE,EAAE,EAAC,EAAE,EAAE,EAAC,EAAE,EAAE,EAAC,EAAE,EAAE,EAAC,EAAE,KAAK;QAAC;QAAE,KAAI,SAAS,CAAC;YAAE,IAAI,IAAE,IAAI,EAAC,IAAE,EAAE,KAAK;YAAC,IAAG,CAAC,EAAE,IAAI,IAAE,GAAE;gBAAC,IAAI,GAAE,IAAE,GAAE,GAAE,IAAE,GAAE,IAAE,GAAE,IAAE,GAAE,IAAE;gBAAE,IAAG,EAAE,EAAE,KAAG,EAAE,EAAE,IAAE,EAAE,EAAE,KAAG,EAAE,EAAE,IAAE,EAAE,EAAE,KAAG,EAAE,EAAE,EAAC,EAAE,IAAI,GAAC;oBAAC,EAAE,EAAE,IAAE;oBAAE,EAAE,EAAE,IAAE;oBAAE,EAAE,EAAE,IAAE;iBAAE;qBAAK;oBAAC,IAAI,KAAE,EAAE,EAAE,EAAC,MAAG,EAAE,EAAE,EAAC,KAAI,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,IAAI,IAAE,EAAE,EAAE,EAAC,KAAG,EAAE,EAAE,EAAC,IAAI,KAAG,IAAE,CAAC,CAAC,EAAE,IAAE,GAAE,GAAG,IAAE,GAAE,KAAG,IAAE,CAAC,KAAE,EAAE,IAAE,GAAE,KAAG,IAAE,CAAC,IAAE,EAAE,IAAE,GAAE,KAAG,IAAE,CAAC,IAAE,EAAE,IAAE;oBAAE,EAAE,IAAI,GAAC,IAAE;wBAAC,CAAC,CAAC,CAAC,IAAE,CAAC;wBAAE,CAAC,CAAC,CAAC,IAAE,CAAC;wBAAE,CAAC,CAAC,CAAC,IAAE,CAAC;qBAAE,GAAC;wBAAC,CAAC,CAAC,CAAC,IAAE,CAAC,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,CAAC,IAAE,CAAC;wBAAE,CAAC,CAAC,CAAC,IAAE,CAAC,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,CAAC,IAAE,CAAC;wBAAE,CAAC,CAAC,CAAC,IAAE,CAAC,EAAE,EAAE,GAAC,EAAE,EAAE,GAAC,CAAC,IAAE,CAAC;qBAAE;gBAAA;YAAC;YAAC,OAAO,EAAE,IAAI;QAAA;QAAE,UAAS,SAAS,CAAC;YAAE,IAAI,IAAE,IAAI,EAAC,IAAE,CAAC,CAAC,EAAE,IAAE;YAAE,OAAO,OAAK,CAAC,CAAC,EAAE,IAAE,GAAE,OAAK,CAAC,CAAC,EAAE,IAAE,GAAE,KAAG,EAAE,EAAE,IAAE,KAAG,EAAE,EAAE,IAAE,QAAM,EAAE,EAAE,IAAE,QAAM,EAAE,EAAE,IAAE,QAAM,EAAE,EAAE,IAAE,QAAM,EAAE,EAAE;QAAA;IAAC,GAAE,EAAE,SAAS,GAAC;QAAC,MAAK,SAAS,CAAC;YAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBAAC,MAAK;gBAAE,OAAM,EAAE,GAAG;YAAE;QAAE;QAAE,SAAQ;YAAW,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;gBAAE,OAAO,EAAE,KAAK;YAAA;QAAE;QAAE,MAAK;YAAW,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;QAAE;QAAE,KAAI,SAAS,CAAC;YAAE,IAAI,IAAI,IAAE,IAAI,CAAC,MAAM,EAAC,IAAE,GAAE,IAAE,EAAE,IAAI,IAAG,IAAI,IAAG,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAG,OAAO,EAAE,IAAI,CAAC,GAAG,KAAK;YAAC,OAAO,IAAI,CAAC,OAAO,CAAC;QAAE;QAAE,SAAQ,SAAS,CAAC;YAAE,IAAI,IAAI,GAAE,GAAE,GAAE,IAAE,IAAI,CAAC,MAAM,EAAC,KAAE,GAAE,KAAE,EAAE,IAAI,IAAG,KAAI,CAAC,CAAC,IAAE,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,IAAI,CAAC,IAAG,KAAK,CAAC,EAAE,EAAC,KAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,IAAI,CAAC,IAAG,KAAK,CAAC,EAAE,EAAC,KAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAC,EAAE,IAAI,CAAC,IAAG,KAAK,CAAC,EAAE,EAAC,GAAG,IAAE,KAAG,KAAK,MAAI,CAAC,KAAG,CAAC,IAAE,GAAE,IAAE,EAAE,IAAI,CAAC,IAAG,KAAK;YAAE,OAAO;QAAC;QAAE,SAAQ;YAAW,IAAI,IAAE,IAAI,CAAC,MAAM;YAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,CAAC;gBAAE,OAAO,EAAE,EAAE,EAAE,KAAK,GAAE,EAAE,EAAE,KAAK;YAAE;YAAG,IAAI,IAAE,CAAC,CAAC,EAAE,CAAC,KAAK;YAAC,CAAC,CAAC,EAAE,GAAC,KAAG,CAAC,CAAC,EAAE,GAAC,KAAG,CAAC,CAAC,EAAE,GAAC,KAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAC;gBAAC;gBAAE;gBAAE;aAAE;YAAE,IAAI,IAAE,EAAE,MAAM,GAAC,GAAE,KAAE,CAAC,CAAC,EAAE,CAAC,KAAK;YAAC,EAAC,CAAC,EAAE,GAAC,OAAK,EAAC,CAAC,EAAE,GAAC,OAAK,EAAC,CAAC,EAAE,GAAC,OAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAC;gBAAC;gBAAI;gBAAI;aAAI;QAAC;IAAC,GAAE;QAAC,UAAS,SAAS,CAAC,EAAC,CAAC;YAAE,IAAG,CAAC,OAAO,SAAS,CAAC,MAAI,IAAE,KAAG,IAAE,KAAI,MAAM,IAAI,MAAM;YAAyE,IAAG,CAAC,EAAE,MAAM,IAAE,IAAE,KAAG,IAAE,KAAI,OAAM,CAAC;YAAE,IAAG,CAAC,EAAE,MAAM,IAAE,IAAE,KAAG,IAAE,KAAI,OAAM,CAAC;YAAE,IAAI,IAAI,IAAE,EAAE,EAAC,IAAE,IAAI,KAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;gBAAC,IAAI,IAAE,CAAC,CAAC,EAAE,EAAC,IAAE,EAAE,IAAI,CAAC;gBAAK,EAAE,GAAG,CAAC,MAAI,CAAC,EAAE,GAAG,CAAC,IAAG,EAAE,IAAI,CAAC,EAAE;YAAC;YAAC,IAAG,EAAE,MAAM,IAAE,GAAE,OAAO,IAAI,EAAE;YAAG,IAAI,IAAE,SAAS,CAAC;gBAAE,IAAI,GAAE,IAAE,IAAI,MAAM;gBAAO,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC;oBAAE,IAAE,EAAE,CAAC,CAAC,EAAE,IAAE,GAAE,CAAC,CAAC,EAAE,IAAE,GAAE,CAAC,CAAC,EAAE,IAAE,IAAG,CAAC,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE;gBAAC,IAAG;YAAC,EAAE;YAAG,EAAE,OAAO,CAAC,YAAW;YAAG,IAAI,IAAE,SAAS,CAAC,EAAC,CAAC;gBAAE,IAAI,GAAE,GAAE,GAAE,IAAE,KAAI,IAAE,GAAE,IAAE,KAAI,IAAE,GAAE,IAAE,KAAI,IAAE;gBAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC;oBAAE,CAAC,IAAE,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,IAAE,IAAE,IAAE,IAAE,KAAG,CAAC,IAAE,CAAC,GAAE,CAAC,IAAE,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,IAAE,IAAE,IAAE,IAAE,KAAG,CAAC,IAAE,CAAC,GAAE,CAAC,IAAE,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,IAAE,IAAE,IAAE,IAAE,KAAG,CAAC,IAAE,CAAC;gBAAC,IAAG,IAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE;YAAE,EAAE,GAAE,IAAG,IAAE,IAAI,EAAE,SAAS,CAAC,EAAC,CAAC;gBAAE,OAAO,EAAE,EAAE,KAAK,IAAG,EAAE,KAAK;YAAG;YAAG,SAAS,EAAE,CAAC,EAAC,CAAC;gBAAE,IAAI,IAAI,GAAE,IAAE,EAAE,IAAI,IAAG,IAAE,GAAE,IAAE,KAAK;oBAAC,IAAG,KAAG,GAAE;oBAAO,IAAG,MAAI,KAAI;oBAAO,IAAG,CAAC,IAAE,EAAE,GAAG,EAAE,EAAE,KAAK,IAAG;wBAAC,IAAI,KAAE,EAAE,GAAE,IAAG,IAAE,EAAC,CAAC,EAAE,EAAC,IAAE,EAAC,CAAC,EAAE;wBAAC,IAAG,CAAC,GAAE;wBAAO,EAAE,IAAI,CAAC,IAAG,KAAG,CAAC,EAAE,IAAI,CAAC,IAAG,GAAG;oBAAC,OAAM,EAAE,IAAI,CAAC,IAAG;gBAAG;YAAC;YAAC,EAAE,IAAI,CAAC,IAAG,EAAE,GAAE,MAAI;YAAG,IAAI,IAAI,IAAE,IAAI,EAAE,SAAS,CAAC,EAAC,CAAC;gBAAE,OAAO,EAAE,EAAE,KAAK,KAAG,EAAE,MAAM,IAAG,EAAE,KAAK,KAAG,EAAE,MAAM;YAAG,IAAG,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG;YAAI,EAAE,GAAE;YAAG,IAAI,IAAI,IAAE,IAAI,GAAE,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG;YAAI,OAAO;QAAC;IAAC;AAAC,IAAI,QAAQ,EAAC,IAAE,SAAS,CAAC;IAAE,IAAI,CAAC,MAAM,GAAC,SAAS,aAAa,CAAC,WAAU,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAM,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,EAAE,YAAY,EAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,EAAE,aAAa,EAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAE,GAAE,GAAE,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,MAAM;AAAC;AAAE,EAAE,SAAS,CAAC,YAAY,GAAC;IAAW,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAE,GAAE,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,MAAM;AAAC;AAAE,IAAI,IAAE,YAAW;AAAE,EAAE,SAAS,CAAC,QAAQ,GAAC,SAAS,CAAC,EAAC,CAAC;IAAE,OAAO,KAAK,MAAI,KAAG,CAAC,IAAE,EAAE,GAAE,IAAI,CAAC,UAAU,CAAC,GAAE,GAAE,EAAE,CAAC,EAAE;AAAA,GAAE,EAAE,SAAS,CAAC,UAAU,GAAC,SAAS,CAAC,EAAC,CAAC,EAAC,CAAC;IAAE,IAAI,KAAE,SAAS,CAAC;QAAE,IAAI,IAAE,EAAE,UAAU,EAAC,IAAE,EAAE,OAAO;QAAC,IAAG,KAAK,MAAI,KAAG,OAAO,SAAS,CAAC,IAAG;YAAC,IAAG,MAAI,GAAE,MAAM,IAAI,MAAM;YAAoG,IAAE,KAAK,GAAG,CAAC,GAAE,IAAG,IAAE,KAAK,GAAG,CAAC,GAAE;QAAG,OAAM,IAAE;QAAG,OAAM,CAAC,KAAK,MAAI,KAAG,CAAC,OAAO,SAAS,CAAC,MAAI,IAAE,CAAC,KAAG,CAAC,IAAE,EAAE,GAAE;YAAC,YAAW;YAAE,SAAQ;QAAC;IAAC,EAAE;QAAC,YAAW;QAAE,SAAQ;IAAC,IAAG,IAAE,IAAI,EAAE,IAAG,IAAE,SAAS,CAAC,EAAC,CAAC,EAAC,CAAC;QAAE,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,GAAE,IAAE,GAAE,IAAE,EAAE,EAAC,IAAE,GAAE,IAAE,GAAE,KAAG,EAAE,IAAE,CAAC,CAAC,IAAE,CAAC,IAAE,IAAE,CAAC,EAAE,EAAC,KAAE,CAAC,CAAC,IAAE,EAAE,EAAC,IAAE,CAAC,CAAC,IAAE,EAAE,EAAC,CAAC,KAAK,MAAI,CAAC,IAAE,CAAC,CAAC,IAAE,EAAE,KAAG,KAAG,GAAG,KAAG,CAAC,IAAE,OAAK,KAAE,OAAK,IAAE,OAAK,EAAE,IAAI,CAAC;YAAC;YAAE;YAAE;SAAE,CAAC;QAAE,OAAO;IAAC,EAAE,EAAE,YAAY,GAAG,IAAI,EAAC,EAAE,KAAK,GAAC,EAAE,MAAM,EAAC,GAAE,OAAO,GAAE,IAAE,EAAE,GAAE,GAAE,UAAU;IAAE,OAAO,IAAE,EAAE,OAAO,KAAG;AAAI,GAAE,EAAE,SAAS,CAAC,eAAe,GAAC,SAAS,CAAC,EAAC,CAAC,EAAC,CAAC;IAAE,IAAI,IAAE,IAAI,EAAC,IAAE,SAAS,aAAa,CAAC;IAAO,EAAE,gBAAgB,CAAC,QAAO;QAAW,IAAI,KAAE,EAAE,UAAU,CAAC,GAAE,GAAE;QAAG,EAAE,EAAC,CAAC,EAAE,EAAC;IAAE,IAAG,EAAE,GAAG,GAAC;AAAC,GAAE,EAAE,SAAS,CAAC,YAAY,GAAC,SAAS,CAAC,EAAC,CAAC;IAAE,IAAI,IAAE,IAAI;IAAe,EAAE,IAAI,CAAC,OAAM,GAAE,CAAC,IAAG,EAAE,YAAY,GAAC,eAAc,EAAE,MAAM,GAAC;QAAW,IAAG,OAAK,IAAI,CAAC,MAAM,EAAC;YAAC,IAAI,IAAE,IAAI,WAAW,IAAI,CAAC,QAAQ;YAAE,IAAE,EAAE,MAAM;YAAC,IAAI,IAAI,IAAE,IAAI,MAAM,IAAG,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI,CAAC,CAAC,EAAE,GAAC,OAAO,YAAY,CAAC,CAAC,CAAC,EAAE;YAAE,IAAI,IAAE,EAAE,IAAI,CAAC,KAAI,IAAE,OAAO,IAAI,CAAC;YAAG,EAAE,2BAAyB;QAAE;IAAC,GAAE,EAAE,IAAI;AAAE,GAAE,EAAE,SAAS,CAAC,aAAa,GAAC,SAAS,CAAC,EAAC,CAAC,EAAC,CAAC;IAAE,IAAI,IAAE,IAAI;IAAC,IAAI,CAAC,YAAY,CAAC,GAAE,SAAS,CAAC;QAAE,IAAI,IAAE,SAAS,aAAa,CAAC;QAAO,EAAE,gBAAgB,CAAC,QAAO;YAAW,IAAI,IAAE,EAAE,UAAU,CAAC,GAAE,GAAE;YAAG,EAAE,CAAC,CAAC,EAAE,EAAC,IAAI;QAAC,IAAG,EAAE,GAAG,GAAC;IAAC;AAAE","ignoreList":[0]}},
    {"offset": {"line": 1361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}